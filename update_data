#!/bin/bash

# Function to check if a user is an admin
is_admin() {
    grep -q "^$USER$" admins.txt
    return $?
}


list_databases() {
    database_path="Databases"

    # Check if the 'Databases' directory exists
    if [ -d "$database_path" ]; then
        # Check if there are any databases
        if [ -n "$(ls -A "$database_path")" ]; then
            echo "Available databases:"
            for db in "$database_path"/*; do
                if [ -d "$db" ]; then
                    db_name=$(basename "$db")

                    # Check if the user has permission to access the database
                    if [ -r "$db" ] || [ -x "$db" ] || [ "$(id -Gn | grep -wq 'admins.txt')" ]; then
                        echo "$db_name"
                    fi
                fi
            done
        else
            echo "No databases found."
            exit 1
        fi
    else
        echo "No databases found."
        exit 1
    fi
}
# Function to list all tables in a database
list_tables() {
    database_name=$1
    table_path="Databases/$database_name"

    # Check if the database exists
    if [ -d "$table_path" ]; then
        # Check if there are any tables in the database
        if [ -n "$(ls -A "$table_path")" ]; then
            echo "Tables in database '$database_name':"
            ls "$table_path" | sed 's/\.txt$//'
        else
            echo "No tables found in database '$database_name'."
            exit 1
        fi
    else
        echo "Database '$database_name' does not exist."
        exit 1
    fi
}

# Function to update data
update_data() {
    database_name=$1
    table_name=$2

    # Check if the table exists
    if [ -f "Databases/$database_name/$table_name.txt" ]; then
        echo "Updating data in table '$table_name' in database '$database_name'."

        # Display all rows in the table for reference
        echo "Current data in table '$table_name':"
        cat "Databases/$database_name/$table_name.txt"
        echo -n "Enter the name of the column to update: "
	read COLUMN_NAME

	echo -n "Enter the ID of the row to update: "
	read ROW_ID

	echo -n "Enter the new value for '$COLUMN_NAME' in row with ID '$ROW_ID': "
	read NEW_VALUE

	if ! grep -q "$ROW_ID" "Databases/$database_name/$table_name.txt"; then
    	echo "Row with ID '$ROW_ID' not found in '$TABLE_NAME'."
    	exit 1
	fi

	COLUMN_INDEX=$(head -n 1 "Databases/$database_name/$table_name.txt" | awk -F',' -v col_name="$COLUMN_NAME" '{ for (i=1; i<=NF; i++) { if ($i == col_name) { print i; exit } } }')

	if [ -z "$COLUMN_INDEX" ]; then
    	echo "Column '$COLUMN_NAME' not found in '$table_name'."
    	exit 1
	fi

awk -v id="$ROW_ID" -v value="$NEW_VALUE" -v column="$COLUMN_INDEX" 'BEGIN {FS=OFS=","} {if ($1==id) {$column=value;} print}' Databases/$database_name/$table_name.txt > temp && mv temp Databases/$database_name/$table_name.txt

	echo "Data in '$COLUMN_NAME' for row with ID '$ROW_ID' in '$table_name has been updated to '$NEW_VALUE'."
	# add log
               /bin/bash "./create_log" "update_data" "$database_name" "$USER"
    else
        echo "Table '$table_name' does not exist in database '$database_name'."
        exit 1
    fi
}


# Check if the 'Databases' directory exists
if [ ! -d "Databases" ]; then
    echo "No databases found."
    exit 1
fi

# List all databases that the user has access to
echo "Listing all databases you have access to:"
list_databases

# Read the database name from user input
read -p "Enter the name of the database to update data into: " database_name

# Check if the database name is empty
if [ -z "$database_name" ]; then
    echo "Database name cannot be empty."
    exit 1
fi

# Check if the database exists
if [ ! -d "Databases/$database_name" ]; then
    echo "Database '$database_name' does not exist or you do not have access to it."
    exit 1
fi

# List all tables in the selected database
echo "Listing all tables in database '$database_name':"
list_tables "$database_name"

# Read the table name from user input
read -p "Enter the name of the table to insert data into: " table_name

# Check if the table name is empty
if [ -z "$table_name" ]; then
    echo "Table name cannot be empty."
    exit 1
fi
# update data into the table
update_data "$database_name" "$table_name"
